source /usr/lib/gitlog/constant

printVersion() {
	echo "$0 version $VERSION"
}

printHelp() {
	echo "Usage: gitlog.sh [options]"
	echo "Options:"
	echo "  -h, --help           Show this help message and exit"
	echo "  -v, --version        Show version number"
	echo "  -g, --generate       Generate log files"
	echo "    -a, --author       Specify the author (optional, overrides config)"
	echo "    -s, --since        Specify the date since when to generate logs (optional, overrides config)"
	echo "    -l, --list         Specify the repository list to read from"
}

loadConfig() {
	echo "Loading configuration file..." >&2
	local author=""
	local since=""
	local repo_list=""

	if [[ -f "$CONFIG_FILE" ]]; then
		source "$CONFIG_FILE"
	else
		echo "ERROR: Config file not found: $CONFIG_FILE" >&2
		exit 1
	fi

	echo "$author $since $repo_list"
}

loadRepositories() {
	local repo_file="$CONFIG_DIR/repositories/$1.json"
	echo "Loading repositories from $repo_file..."
	if [[ -f "$repo_file" ]]; then
		jq -r '.[]' "$repo_file" 
	else
		echo "Repository config not found: $repo_file" >&2
		exit 1
	fi
}

generateLog() {
	read -r author since repo_list <<<"$(loadConfig)"

	while getopts ":a:s:l:" flag; do
		case "$flag" in
		a) author="$OPTARG" ;;
		s) since="$OPTARG" ;;
		l) repo_list="$OPTARG" ;;
		*)
			echo "Invalid option: -$OPTARG" >&2
			printHelp
			exit 1
			;;
		esac
	done

	outdir="$OUTPUT_BASE_DIR/$author/$since/"
	mkdir -p "$outdir"

	mapfile -t repo_paths < <(loadRepositories "$repo_list")

	echo "Generating report for $author starting from $since"
	echo "Log files will be saved in $outdir"

	for repo in "${repo_paths[@]}"; do
		repo_name=$(basename "$repo")
		git -C "$repo" log --since="$since" --author="$author" >"$outdir/$repo_name.txt"
		echo "Log for $repo_name saved to $outdir/$repo_name.txt"
	done
}
